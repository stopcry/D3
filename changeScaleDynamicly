<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>动态调节坐标轴尺度</title>

    <script type="text/javascript" src="/D3/d3.js"></script>
    <style>
        line {
            stroke: rgb(136, 136, 136, 0.2);
        }
    </style>
</head>

<body>
    <script type="text/javascript">
        var height = 500,
            width = 500,
            margin = 25,
            xAxis, yAxis, xAxisLength, yAxisLength;

        //绘制svg画布
        var svg = d3.select("body").append("svg")
            .attr("class", "axis")
            .attr("width", width)
            .attr('height', height);
        //初始化x轴
        function renderXAxis() {
            xAxisLength = width - 2 * margin;

            var scale = d3.scaleLinear()
                .domain([0, 100])
                .range([0, xAxisLength]);

            var xAxis = d3.axisBottom()
                .scale(scale);

            svg.append("g")
                .attr("class", "x-axis")
                .attr("transform", function() {
                    return "translate(" + margin + "," + (height - margin) + ")";
                })
                .call(xAxis);
        }
        //初始化y轴
        function renderYAxis() {
            yAxisLength = height - 2 * margin;

            var scale = d3.scaleLinear()
                .domain([100, 0])
                .range([0, yAxisLength]);

            var yAxis = d3.axisLeft()
                .scale(scale);

            svg.append("g")
                .attr("class", "y-axis")
                .attr("transform", function() {
                    return "translate(" + margin + "," + margin + ")";
                })
                .call(yAxis);
        }
        //重新生成坐标轴尺度
        function rescale() {
            var max = Math.round(Math.random() * 100);
            console.log(max);
            var scale = d3.scaleLinear()
                .domain([0, max])
                .range([0, xAxisLength]);

            var yScale = d3.scaleLinear()
                .domain([max, 0])
                .range([0, yAxisLength]);

            xAxis = d3.axisBottom().scale(scale);
            yAxis = d3.axisLeft().scale(yScale);

            svg.select("g.x-axis")
                .transition()
                .call(xAxis);

            svg.select("g.y-axis")
                .transition()
                .call(yAxis);

            renderxGridlines();
        }
        //绘制网格线
        function renderxGridlines() {
            var lines = d3.selectAll("g.x-axis g.tick")
                .select("line.grid-line")
                .remove();

            lines = d3.selectAll("g.x-axis g.tick")
                .append("line")
                .classed("grid-line", true);

            lines.attr("x1", 0)
                .attr("y1", 0)
                .attr("x2", 0)
                .attr("y2", -yAxisLength);

            d3.selectAll("g.y-axis g.tick")
                .select("line.grid-line")
                .remove();

            d3.selectAll("g.y-axis g.tick")
                .append("line")
                .classed("grid-line", true)
                .attr("x1", 0)
                .attr("y1", 0)
                .attr("x2", xAxisLength)
                .attr("y2", 0);

        }

        renderXAxis();
        renderYAxis();
        renderxGridlines();
    </script>
    <br>
    <button onclick="rescale()">Rescale</button>

</body>

</html>
